// Generated by view binder compiler. Do not edit!
package com.example.ghost_budget.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ghost_budget.R;
import com.github.mikephil.charting.charts.BarChart;
import com.github.mikephil.charting.charts.LineChart;
import com.github.mikephil.charting.charts.PieChart;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHomeBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final BarChart barChart;

  @NonNull
  public final ShapeableImageView btnBarChart;

  @NonNull
  public final ShapeableImageView btnChartOptions;

  @NonNull
  public final ShapeableImageView btnLineChart;

  @NonNull
  public final ShapeableImageView btnPieChart;

  @NonNull
  public final ShapeableImageView btnReal;

  @NonNull
  public final ShapeableImageView btnSimulated;

  @NonNull
  public final ShapeableImageView btnSimulatedReal;

  @NonNull
  public final RelativeLayout chartsLayout;

  @NonNull
  public final CoordinatorLayout coordinatorLayout;

  @NonNull
  public final FloatingActionButton fbtnAddExpense;

  @NonNull
  public final LineChart lineChart;

  @NonNull
  public final LinearLayout linearBottom;

  @NonNull
  public final PieChart pieChart;

  @NonNull
  public final RecyclerView recycler;

  private ActivityHomeBinding(@NonNull CoordinatorLayout rootView, @NonNull BarChart barChart,
      @NonNull ShapeableImageView btnBarChart, @NonNull ShapeableImageView btnChartOptions,
      @NonNull ShapeableImageView btnLineChart, @NonNull ShapeableImageView btnPieChart,
      @NonNull ShapeableImageView btnReal, @NonNull ShapeableImageView btnSimulated,
      @NonNull ShapeableImageView btnSimulatedReal, @NonNull RelativeLayout chartsLayout,
      @NonNull CoordinatorLayout coordinatorLayout, @NonNull FloatingActionButton fbtnAddExpense,
      @NonNull LineChart lineChart, @NonNull LinearLayout linearBottom, @NonNull PieChart pieChart,
      @NonNull RecyclerView recycler) {
    this.rootView = rootView;
    this.barChart = barChart;
    this.btnBarChart = btnBarChart;
    this.btnChartOptions = btnChartOptions;
    this.btnLineChart = btnLineChart;
    this.btnPieChart = btnPieChart;
    this.btnReal = btnReal;
    this.btnSimulated = btnSimulated;
    this.btnSimulatedReal = btnSimulatedReal;
    this.chartsLayout = chartsLayout;
    this.coordinatorLayout = coordinatorLayout;
    this.fbtnAddExpense = fbtnAddExpense;
    this.lineChart = lineChart;
    this.linearBottom = linearBottom;
    this.pieChart = pieChart;
    this.recycler = recycler;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bar_chart;
      BarChart barChart = ViewBindings.findChildViewById(rootView, id);
      if (barChart == null) {
        break missingId;
      }

      id = R.id.btn_bar_chart;
      ShapeableImageView btnBarChart = ViewBindings.findChildViewById(rootView, id);
      if (btnBarChart == null) {
        break missingId;
      }

      id = R.id.btn_chart_options;
      ShapeableImageView btnChartOptions = ViewBindings.findChildViewById(rootView, id);
      if (btnChartOptions == null) {
        break missingId;
      }

      id = R.id.btn_line_chart;
      ShapeableImageView btnLineChart = ViewBindings.findChildViewById(rootView, id);
      if (btnLineChart == null) {
        break missingId;
      }

      id = R.id.btn_pie_chart;
      ShapeableImageView btnPieChart = ViewBindings.findChildViewById(rootView, id);
      if (btnPieChart == null) {
        break missingId;
      }

      id = R.id.btn_real;
      ShapeableImageView btnReal = ViewBindings.findChildViewById(rootView, id);
      if (btnReal == null) {
        break missingId;
      }

      id = R.id.btn_simulated;
      ShapeableImageView btnSimulated = ViewBindings.findChildViewById(rootView, id);
      if (btnSimulated == null) {
        break missingId;
      }

      id = R.id.btn_simulated_real;
      ShapeableImageView btnSimulatedReal = ViewBindings.findChildViewById(rootView, id);
      if (btnSimulatedReal == null) {
        break missingId;
      }

      id = R.id.charts_layout;
      RelativeLayout chartsLayout = ViewBindings.findChildViewById(rootView, id);
      if (chartsLayout == null) {
        break missingId;
      }

      CoordinatorLayout coordinatorLayout = (CoordinatorLayout) rootView;

      id = R.id.fbtn_add_expense;
      FloatingActionButton fbtnAddExpense = ViewBindings.findChildViewById(rootView, id);
      if (fbtnAddExpense == null) {
        break missingId;
      }

      id = R.id.line_chart;
      LineChart lineChart = ViewBindings.findChildViewById(rootView, id);
      if (lineChart == null) {
        break missingId;
      }

      id = R.id.linear_bottom;
      LinearLayout linearBottom = ViewBindings.findChildViewById(rootView, id);
      if (linearBottom == null) {
        break missingId;
      }

      id = R.id.pie_chart;
      PieChart pieChart = ViewBindings.findChildViewById(rootView, id);
      if (pieChart == null) {
        break missingId;
      }

      id = R.id.recycler;
      RecyclerView recycler = ViewBindings.findChildViewById(rootView, id);
      if (recycler == null) {
        break missingId;
      }

      return new ActivityHomeBinding((CoordinatorLayout) rootView, barChart, btnBarChart,
          btnChartOptions, btnLineChart, btnPieChart, btnReal, btnSimulated, btnSimulatedReal,
          chartsLayout, coordinatorLayout, fbtnAddExpense, lineChart, linearBottom, pieChart,
          recycler);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
