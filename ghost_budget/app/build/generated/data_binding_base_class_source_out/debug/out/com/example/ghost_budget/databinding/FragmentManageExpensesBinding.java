// Generated by view binder compiler. Do not edit!
package com.example.ghost_budget.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.NumberPicker;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ghost_budget.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentManageExpensesBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button btnSaveClose;

  @NonNull
  public final Button btnSaveMore;

  @NonNull
  public final Button closeButton;

  @NonNull
  public final EditText etCost;

  @NonNull
  public final EditText etName;

  @NonNull
  public final LinearLayout linearButtonsFragment;

  @NonNull
  public final NumberPicker numberPicker;

  @NonNull
  public final RadioGroup radioGroup;

  @NonNull
  public final RadioButton rb1;

  @NonNull
  public final RadioButton rb2;

  @NonNull
  public final RadioButton rb3;

  @NonNull
  public final ScrollView scrollManage;

  @NonNull
  public final Spinner spPeriod;

  @NonNull
  public final SwitchCompat switchRepeat;

  @NonNull
  public final SwitchCompat switchSimulate;

  @NonNull
  public final TextView tvInterval;

  private FragmentManageExpensesBinding(@NonNull FrameLayout rootView, @NonNull Button btnSaveClose,
      @NonNull Button btnSaveMore, @NonNull Button closeButton, @NonNull EditText etCost,
      @NonNull EditText etName, @NonNull LinearLayout linearButtonsFragment,
      @NonNull NumberPicker numberPicker, @NonNull RadioGroup radioGroup, @NonNull RadioButton rb1,
      @NonNull RadioButton rb2, @NonNull RadioButton rb3, @NonNull ScrollView scrollManage,
      @NonNull Spinner spPeriod, @NonNull SwitchCompat switchRepeat,
      @NonNull SwitchCompat switchSimulate, @NonNull TextView tvInterval) {
    this.rootView = rootView;
    this.btnSaveClose = btnSaveClose;
    this.btnSaveMore = btnSaveMore;
    this.closeButton = closeButton;
    this.etCost = etCost;
    this.etName = etName;
    this.linearButtonsFragment = linearButtonsFragment;
    this.numberPicker = numberPicker;
    this.radioGroup = radioGroup;
    this.rb1 = rb1;
    this.rb2 = rb2;
    this.rb3 = rb3;
    this.scrollManage = scrollManage;
    this.spPeriod = spPeriod;
    this.switchRepeat = switchRepeat;
    this.switchSimulate = switchSimulate;
    this.tvInterval = tvInterval;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentManageExpensesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentManageExpensesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_manage_expenses, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentManageExpensesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_save_close;
      Button btnSaveClose = ViewBindings.findChildViewById(rootView, id);
      if (btnSaveClose == null) {
        break missingId;
      }

      id = R.id.btn_save_more;
      Button btnSaveMore = ViewBindings.findChildViewById(rootView, id);
      if (btnSaveMore == null) {
        break missingId;
      }

      id = R.id.close_button;
      Button closeButton = ViewBindings.findChildViewById(rootView, id);
      if (closeButton == null) {
        break missingId;
      }

      id = R.id.et_cost;
      EditText etCost = ViewBindings.findChildViewById(rootView, id);
      if (etCost == null) {
        break missingId;
      }

      id = R.id.et_name;
      EditText etName = ViewBindings.findChildViewById(rootView, id);
      if (etName == null) {
        break missingId;
      }

      id = R.id.linear_buttons_fragment;
      LinearLayout linearButtonsFragment = ViewBindings.findChildViewById(rootView, id);
      if (linearButtonsFragment == null) {
        break missingId;
      }

      id = R.id.number_picker;
      NumberPicker numberPicker = ViewBindings.findChildViewById(rootView, id);
      if (numberPicker == null) {
        break missingId;
      }

      id = R.id.radio_group;
      RadioGroup radioGroup = ViewBindings.findChildViewById(rootView, id);
      if (radioGroup == null) {
        break missingId;
      }

      id = R.id.rb_1;
      RadioButton rb1 = ViewBindings.findChildViewById(rootView, id);
      if (rb1 == null) {
        break missingId;
      }

      id = R.id.rb_2;
      RadioButton rb2 = ViewBindings.findChildViewById(rootView, id);
      if (rb2 == null) {
        break missingId;
      }

      id = R.id.rb_3;
      RadioButton rb3 = ViewBindings.findChildViewById(rootView, id);
      if (rb3 == null) {
        break missingId;
      }

      id = R.id.scroll_manage;
      ScrollView scrollManage = ViewBindings.findChildViewById(rootView, id);
      if (scrollManage == null) {
        break missingId;
      }

      id = R.id.sp_period;
      Spinner spPeriod = ViewBindings.findChildViewById(rootView, id);
      if (spPeriod == null) {
        break missingId;
      }

      id = R.id.switch_repeat;
      SwitchCompat switchRepeat = ViewBindings.findChildViewById(rootView, id);
      if (switchRepeat == null) {
        break missingId;
      }

      id = R.id.switch_simulate;
      SwitchCompat switchSimulate = ViewBindings.findChildViewById(rootView, id);
      if (switchSimulate == null) {
        break missingId;
      }

      id = R.id.tv_interval;
      TextView tvInterval = ViewBindings.findChildViewById(rootView, id);
      if (tvInterval == null) {
        break missingId;
      }

      return new FragmentManageExpensesBinding((FrameLayout) rootView, btnSaveClose, btnSaveMore,
          closeButton, etCost, etName, linearButtonsFragment, numberPicker, radioGroup, rb1, rb2,
          rb3, scrollManage, spPeriod, switchRepeat, switchSimulate, tvInterval);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
